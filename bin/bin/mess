#!/usr/bin/env bash


### Check arguments
###################

[[ "$*" == "" ]] && exit 1




### Check ~/.tmp
################

[[ -d $HOME/.tmp ]] || mkdir $HOME/.tmp
[[ $(du $HOME/.tmp | awk '{print $1}') -gt 1048576 ]] && rm $HOME/.tmp/*




### Variables and functions definition
######################################

FILE="$*"
NAME=${FILE%.*}
NAME=${NAME##*/}
MESS="/bin/less -R -~"
LIST="/bin/ls -ANgoh --ignore=".git" --group-directories-first --color=always"

[[ -f ~/.bash_functions ]] && . ~/.bash_functions

_no_preview () {
    echo "                               "
    echo "  ┌─────────────────────────┐  "
    echo "  │  Sry mate, no preview.  │  "
    echo "  └───┬─────────────────────┘  "
    echo "      │                        "
    echo "      │      (\_/)             "
    echo "      └───── (O.o)             "
    echo "             (> <)             "
    echo "                               "
}




### Main body
#############

[[ -L "$FILE" && -d "$FILE" ]] && ${LIST} "$(readlink $FILE)" | ${MESS} && exit
[[ -d "$FILE" ]] && ${LIST} "$FILE" | ${MESS} && exit

# check the relative mime-type here:
# https://www.iana.org/assignments/media-types/media-types.xhtml
case $(file --mime-type "$FILE" -bL) in
    text/* | application/json)
        [[ -x "$(command -v batcat)" ]] && batcat --style numbers,changes --color=always "$FILE" || ${MESS} "$FILE"
        ;;
    application/pdf | application/postscript | application/djvu)
        [[ -f "$HOME/.tmp/$NAME.png" ]] && mess "$HOME/.tmp/$NAME.png" && exit
        [[ -x "$(command -v pdftoppm)" ]] || ${MESS} "$FILE" || exit
        pdftoppm "$FILE" "$HOME/.tmp/$NAME" -singlefile -png 2>/dev/null
        mess "$HOME/.tmp/$NAME.png"
        ;;
    application/gzip | application/zip)
        [[ "${FILE##*.}" != "xopp" ]] && ${MESS} "$FILE" && exit
        [[ -f "$HOME/.tmp/$NAME.png" ]] && mess "$HOME/.tmp/$NAME.png" && exit
        [[ -x "$(command -v xournalpp)" ]] || _no_preview || exit
        xournalpp "$FILE" -p "$HOME/.tmp/$NAME.pdf" 2>/dev/null
        mess "$HOME/.tmp/$NAME.pdf"
        rm "$HOME/.tmp/$NAME.pdf"
        ;;
    video/*)
        [[ -f "$HOME/.tmp/$NAME.png" ]] && mess "$HOME/.tmp/$NAME.png" && exit
        if [[ -x "$(command -v ffmpeg)" ]]; then
            ffmpeg -i "$FILE" -vframes 1 -f image2 "$HOME/.tmp/$NAME.png" 2>/dev/null
            mess "$HOME/.tmp/$NAME.png"
            exit
        fi
        [[ -x "$(command -v mediainfo)" ]] && mediainfo "$FILE" | ${MESS} || _no_preview
        ;;
    audio/*)
        [[ -x "$(command -v mediainfo)" ]] && mediainfo "$FILE" | ${MESS} || _no_preview
        ;;
    image/*)
        [[ -x "$(command -v tcv)" && -x "$(command -v pip)" && $(pip list | grep Pillow) ]] && tcv "$FILE" 2>/dev/null | ${MESS} || _no_preview
        ;;
    *)
        _no_preview
esac
