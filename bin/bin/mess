#!/usr/bin/env bash


### Check arguments
###################

[[ "$*" == "" ]] && exit 1




### Check ~/.tmp
################

if [[ ! -d $HOME/.tmp ]]; then
    mkdir $HOME/.tmp
elif [[ $(du $HOME/.tmp | awk '{print $1}') -gt 1048576 ]]; then
    rm $HOME/.tmp/*
fi




### Functions definition
########################

# check a function with something like this:
# [[ "$(type -t _vim)" == function ]] && _vim $FILE
if [ -f ~/.bash_functions ]; then
    . ~/.bash_functions
fi




### Variables and functions definition
######################################

FILE="$*"
NAME=${FILE%.*}
NAME=${NAME##*/}
MESS="/bin/less -R -~"
LIST="/bin/ls -ANgoh --ignore=".git" --group-directories-first --color=always"

_no_preview () {
    echo "                               "
    echo "  ┌─────────────────────────┐  "
    echo "  │  Sry mate, no preview.  │  "
    echo "  └───┬─────────────────────┘  "
    echo "      │                        "
    echo "      │      (\_/)             "
    echo "      └───── (O.o)             "
    echo "             (> <)             "
    echo "                               "
}




### Main body
#############

if [[ -L "$FILE" && -d "$FILE" ]]; then
    ${LIST} "$(readlink $FILE)" | ${MESS}
elif [[ -d "$FILE" ]]; then
    ${LIST} "$FILE" | ${MESS}
else
    # check the relative mime-type here:
    # https://www.iana.org/assignments/media-types/media-types.xhtml
    case $(file --mime-type "$FILE" -bL) in
        text/*)
            if [[ -f "/usr/share/source-highlight/src-hilite-lesspipe.sh" ]]; then
                /usr/share/source-highlight/src-hilite-lesspipe.sh "$FILE" | ${MESS}
            else
                ${MESS} "$FILE"
            fi
            ;;
        application/pdf | application/postscript | application/djvu)
            if [[ ! -f "$HOME/.tmp/$NAME.png" ]]; then
                if [[ -x "$(command -v pdftoppm)" ]]; then
                    pdftoppm "$FILE" "$HOME/.tmp/$NAME" -singlefile -png 2>/dev/null
                    mess "$HOME/.tmp/$NAME.png"
                else
                    ${MESS} "$FILE"
                fi
            else
                mess "$HOME/.tmp/$NAME.png"
            fi
            ;;
        application/zip | application/gzip)
            if [[ "${FILE##*.}" == "xopp" ]]; then
                if [[ ! -f "$HOME/.tmp/$NAME.png" ]]; then
                    if [[ -x "$(command -v xournalpp)" ]]; then
                        xournalpp "$FILE" -p "$HOME/.tmp/$NAME.pdf" 2>/dev/null
                        mess "$HOME/.tmp/$NAME.pdf"
                        rm "$HOME/.tmp/$NAME.pdf"
                    fi
                else
                    mess "$HOME/.tmp/$NAME.png"
                fi
            else
                ${MESS} "$FILE"
            fi
            ;;
        video/*)
            if [[ ! -f "$HOME/.tmp/$NAME.png" ]]; then
                if [[ -x "$(command -v ffmpeg)" ]]; then
                    ffmpeg -i "$FILE" -vframes 1 -f image2 "$HOME/.tmp/$NAME.png" 2>/dev/null
                    mess "$HOME/.tmp/$NAME.png"
                elif [[ -x "$(command -v mediainfo)" ]]; then
                    mediainfo "$FILE" | ${MESS}
                else
                    _no_preview
                fi
            else
                mess "$HOME/.tmp/$NAME.png"
            fi
            ;;
        audio/*)
            [[ -x "$(command -v mediainfo)" ]] && mediainfo "$FILE" | ${MESS} || _no_preview
            ;;
        image/*)
            # remember to install PIL/Pillow: pip3 install PIL/Pillow
            [[ -x "$(command -v tcv)" ]] && tcv "$FILE" 2>/dev/null | ${MESS} || _no_preview
            ;;
        *)
            _no_preview
    esac
fi
