#!/usr/bin/env bash


### Functions definition
########################

if [ -f ~/.bash_functions ]; then
    . ~/.bash_functions
fi


function fzf_editor_call () {
    RED='\033[1;36m'
    YLW='\033[1;35m'
    NC='\033[0m'

    clear &&
    FILE="$*"
    case $(printf "vim\nkakoune\n" | fzf --prompt="Edit ${FILE##*/} with: " --height 100% --reverse --info=hidden --header-first) in
        "")
            exit 0
            ;;
        vim)
            COMMAND="_vim"
            ;;
        kakoune)
            COMMAND="kak"
    esac

    if [[ ! -x "$(command -v $COMMAND)" && ! "$(type -t $COMMAND)" == function ]]; then
        printf "${RED}%s${YLW}%s${RED}%s${NC}\n" "Editor " "$COMMAND" " not availabile, press enter to continue"
        read ans
        exit 1
    fi

    "$COMMAND" "$FILE"
}


function editor_call () {
    RED='\033[1;36m'
    YLW='\033[1;35m'
    NC='\033[0m'

    clear &&
    printf "${RED}%s${NC}\n" "Edit ${FILE##*/} with:"
    printf "%s${YLW}%s${NC}\n" "  (v) " "vim"
    printf "%s${YLW}%s${NC}\n" "  (k) " "kak"
    printf "${RED}%s${NC} " "Enter an index (q to quit):"

    # to know if you are inside a tmux session just check TMUX variable:
    # [[ -n "${TMUX}" ]] && tmux new-window kak "$FILE" || kak "$FILE"

    FILE="$*"
    while read response; do
        case $response in
            q)
                exit 0
                ;;
            v)
                COMMAND="_vim"
                break
                ;;
            k)
                COMMAND="kak"
                break
                ;;
            *)
                printf "${RED}%s${NC} " "Enter an index (q to quit):"
        esac
    done

    if [[ ! -x "$(command -v $COMMAND)" && ! "$(type -t $COMMAND)" == function ]]; then
        printf "${RED}%s${YLW}%s${RED}%s${NC}\n" "Editor " "$COMMAND" " not availabile, press enter to continue"
        read ans
        exit 1
    fi

    "$COMMAND" "$FILE"
}




### Greppers
############

echo "$*" | grep "\.ar\." && {
    _xhide xterm -e "${EDITOR:=vi}" "$*" &
    exit
}

echo "$1" | grep "\.sent$" && {
    _xhide sent "$1" &
    exit
}




### MIME-type opener (inode/directory not necessary)
####################################################

FILE="$*"
case $(file --mime-type "$FILE" -bL) in
    audio/*)
        clear &&
        _mpv "$FILE"
        ;;
    video/*)
        _xhide "mpv --force-window '$FILE'"
        ;;
    application/pdf | application/postscript | application/djvu | image/vnd.djvu | application/epub+zip)
        _xhide "zathura '$FILE'"
        ;;
    image/*)
        _xhide "esxiv '$FILE'"
        ;;
    *)
        [[ -f "/bin/fzf" ]] && fzf_editor_call "$FILE" || editor_call "$FILE"
esac
