#!/usr/bin/env bash


### Variables definition
########################

FILE="$*"
[[ -x "$(command -v nano)" ]] && TED="Nano\n"$TED
[[ -x "$(command -v kak)" ]] && TED="Kakoune\n"$TED
[[ -x "$(command -v hx)" ]] && TED="Helix\n"$TED
[[ -x "$(command -v vim)" ]] && TED="Vim-COC\nVim-FZF\n"$TED




### Functions definition
########################

[[ -f ~/.bash_functions ]] && . ~/.bash_functions || exit 1

function _run () {
    CMD="$1"
    FILE="$2"
    if [[ -x "$(command -v $CMD)" ]]; then
        _xshow "$CMD '${FILE}'"
    elif [[ "$(type -t $CMD)" == function ]]; then
        $CMD "${FILE}"
    else
        _xshow "xdg-open '${FILE}'"
    fi
}

function _edit () {
    TED="$1"
    FILE="$2"
    [[ ! -f "/bin/fzf" || ! -n $TED ]] && "${EDITOR:=vi}" "${FILE}" && return
    case $(printf "$TED" | fzf --prompt="Edit ${FILE##*/} with: " --height 100% --reverse --info=hidden --header-first) in
        Vim-COC)
            _run "_nvim_cocmode" "${FILE}"
            ;;
        Vim-FZF)
            _run "_nvim" "${FILE}"
            ;;
        Helix)
            hx "${FILE}"
            ;;
        Kakoune)
            kak "${FILE}"
            ;;
        Nano)
            nano "${FILE}"
            ;;
        *)
            return
    esac
}




### Greppers
############

echo "$*" | grep "\.ar\." && {
    _xhide xterm -e "${EDITOR:=vi}" "$*" &
    exit
}

echo "$1" | grep "\.sent$" && {
    _xhide sent "$1" &
    exit
}




### MIME-type opener (inode/directory not necessary)
####################################################

# check the relative mime-type here:
# https://www.iana.org/assignments/media-types/media-types.xhtml
case $(file --mime-type "${FILE}" -bL) in
    audio/* | video/*)
        _run "_mpv" "${FILE}"
        ;;
    application/pdf | application/postscript | application/djvu | image/vnd.djvu | application/epub+zip)
        _run "zathura" "${FILE}"
        ;;
    image/*)
        _run "esxiv" "${FILE}"
        ;;
    text/* | application/json)
        _edit "$TED" "${FILE}"
        ;;
    *)
        _run "(ãƒ„)" "${FILE}"
esac
