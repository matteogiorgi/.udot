#!/usr/bin/env bash

CLICOLOR_FORCE=1
LIST="/bin/ls -a --ignore="." --ignore=".git" --group-directories-first --color=always"
[[ -f ~/.git-prompt.sh ]] && source ~/.git-prompt.sh

while true; do
    printf '%s\n' "$PWD" >~/.fjump.tmp
    [[ $(type -t __git_ps1) == function ]] && GIT_BRANCH=$(__git_ps1 " (%s)") || GIT_BRANCH=""
    if [[ -x "$(command -v mess)" ]]; then
        FILE="$(${LIST} | fzf --ansi --preview 'mess {}' --preview-window 'down,80%,border-sharp' `
                `--bind ctrl-d:preview-half-page-down,ctrl-u:preview-half-page-up --prompt="$PWD$GIT_BRANCH > " `
                `--height 100% --margin 0% --reverse --info=hidden --header-first)"
    else
        FILE="$(${LIST} | fzf --ansi --preview 'less {}' --preview-window 'down,80%,border-sharp' `
                `--bind ctrl-d:preview-half-page-down,ctrl-u:preview-half-page-up --prompt="$PWD$GIT_BRANCH > " `
                `--height 100% --margin 0% --reverse --info=hidden --header-first)"
    fi
    [[ -z "$FILE" ]] && exit 1
    if [[ -d "$FILE" || (-d "$FILE" && -L "$FILE") ]]; then
        cd "${FILE}"
    else
        echo "${PWD}" > /tmp/vim_fuzzy_current_file
        echo "${PWD}/${FILE}" > /tmp/vim_fuzzy_current_file
        break
    fi
done
